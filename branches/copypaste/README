Canorus - a free music score editor
===================================
Canorus  is a free music score editor. It supports note writing, scripting support,
import/export of various file formats, MIDI input and output and more! Note that
Canorus is still in early stage of development and not nearly all the features are
implemented yet!

Canorus is free (libre) software, licensed under GNU GPL. This means that the program
source code is available to public, anyone is welcome to research how the program
works, participate in its development, freely distribute the program and spread the
word! Canorus runs on Linux, Windows, MacOSX and others! 

Build dependencies:
===================
- Qt development package >=4.3 (http://www.trolltech.com)
- Swig >=1.3.31 (http://www.swig.org)
- g++ >=4, make (http://gcc.gnu.org, http://www.mingw.org)
- cmake >=2.4.6 (http://www.cmake.org)
- Python development package >=2.5 (http://www.python.org)

Runtime dependencies:
=====================
- Qt library, same version
- Python library, same version

Compilation:
============
 $ cmake .
 $ make
 $ src/canorus(.exe)

Installation
============
 $ make install

Then install the fonts files in directory src/fonts. I know of at least
three methods:

- Copy them to ~/.fonts (on *n*x based systems)
- Install them with an install tool like install font option in konqueror or drakfont.
- Manual installation like described here: http://linux.org.mt/article/ttfonts

Debian based distributions:
===========================
Download the SVN/release version of canorus and run:
 $ cd canorus-X.Y
 $ debian/rules binary
 
Install the created .deb package.

Troubleshooting:
================
If you get the following error (could be only the last line!):

QT_QMAKE_EXECUTABLE set to qmake version: QTVERSION = **Unknown**
QT_QMAKE_EXECUTABLE = /usr/bin/qmake, please set to path to qmake from qt4.
Qt qmake not found!

Then you have to do the following as described in the CMakeLists.txt
project file in the main directory as well:

Either remove the below line and set it to the path of
your qmake executable or modify the FindQt4.cmake program
and add "NO_DEFAULT_PATH" to the FIND_PROGRAM(QT_QMAKE_EXECUTABLE
instruction as last option, so the default path are not searched
for the qmake binary (like /usr/bin/qmake on Mandriva)
#set(QT_QMAKE_EXECUTABLE "/usr/lib/qt4/bin/qmake")

If you choose to modify FindQt4.cmake don't forget to either
set QTDIR to your qt installation path. CMake does not support
any other way currently.

IMPORTANT: Do not run cmake again before clearing the cache files
CMakeCache.txt and the directory CMakeFiles!

If you get the error "swig not found" then you have the problem
that FindSWIG.cmake does not match your system configuration. On
my system swig files are in /usr/share/swig/1.3.x, so I needed to
create a link to it from swig1.3:

ln -s /usr/share/swig/1.3.[version] /usr/share/swig1.3

Replace .[version] with the real version f.e. 1.3.27.

If you get the following error:
"libpython.a: undefined reference to openpty"
your system requires the util library to be included to the
Canorus link libaries. To do this edit src/CMakeFile.txt file
and search for the line containing TARGET_LINK_LIBRARIES.
Add " util" as last library to the line f.e. like this:

- TARGET_LINK_LIBRARIES(canorus ${QT_LIBRARIES} ${QT_QTXML_LIBRARY} ${RUBY_LIBRARY} ${PYTHON_LIBRARY} util)

To disable Ruby/Python support even when installed call cmake with these options:
-CNO_RUBY:BOOL=TRUE -CNO_PYTHON:BOOL=TRUE

I hope that the NO_DEFAULT_PATH options gets added to newer cmake releases.

Settings
========
Settings are stored in $HOME/.config/Canorus directory under POSIX systems and under
Local settings directory in your user profile directory under Microsoft Windows.

Windows users
=============
See windows/Readme.txt for details about building Canorus under Microsoft Windows.
