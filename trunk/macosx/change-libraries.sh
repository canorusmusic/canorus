#!/bin/sh
#
# change-libraries.sh
#
# USAGE
# 	change-libraries.sh  /path/to/Canorus.app/Contents  LIST_OF_INSTALLED_LIBS
#
# DESCRIPTION
#
#	This script changes the link informaton in the libraries and the executable
#	in an .app bundle. It looks inside the binaries for the given paths and changes
#	those paths to refer to the libraries installed in the .app
#
#	The LIST_OF_INSTALLED_LIBS should be automatically generated by the cmake build script
#	and used like this: change-libraries.sh /path/to/Canorus.app/Contents/ `cat OSX_installed_libs.txt`


# Path to the 'Contents' dir inside the .app e.g "/Applications/Canorus.app/Contents"
appContents="$1"

shift

# Paths stored in the libraries that need to be replaced
oldPaths="$*"

# echo
# echo changing libnames...
# echo
# echo appcontents $appContents
# echo oldpaths $oldPaths
# echo
# echo

# Path inside the .app bundle where the libraries are installed
libDir="Resources/lib"

# Will prepend this path to the name inside the library
newLibPrefix="@executable_path/../$libDir"

# Name of the executable
exeName="canorus"

# Path to the executable
exe="$appContents/MacOS/$exeName"

for oldLibPath in $oldPaths
do
	libName=`basename $oldLibPath`			# The actual name of the binary
	oldLibSymbol=`otool -D $oldLibPath | tail -1`	# The symbol already in the binary
	newLibSymbol="$newLibPrefix/$libName"		# The symbol to insert into the binary

	# Change names in the executable to link to the library in the .app bundle
	install_name_tool -change $oldLibSymbol $newLibSymbol $exe

	# Change this name in the other libraries in the bundle
	for otherLib in `ls $appContents/$libDir`
	do
		install_name_tool -change $oldLibSymbol $newLibSymbol $appContents/$libDir/$otherLib
	done

	# Change the ID name of the library so it knows where it is
	install_name_tool -id $newLibSymbol $appContents/$libDir/$libName
done
