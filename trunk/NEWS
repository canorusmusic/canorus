0.7.1
=====
- Updated translations
- Deprecated version 1 usage of swig, we no longer maintain this.
- Added support for ignoring Lilypond comments when importing it
- Fixed problem that undo command doesn't correctly update the cloned sheet
- Fixed crash when undoing source commits for the first time
- Fixed Lilypond comments import when parsing newlines (cr/lf)
- Fixed crash when importing lilypond lyrics
- Fixed warnings throughout the code with newer gcc compiler versions
  (See separate file large-warn-fixes.txt for technical details)
- Added Break of Compilation when warning occurs
- Fixed Lilypond melismatic lyrics when used in combination with hyphens
- Set autobeamOff for printing when lyrics is applied to the voice
- Added Lilypond export for forced accidentals
- Added underscores as spaces in Lilypond export
- Fixed compilation errors using Swig2
- Fixed note marks time start calculation
- Fixed importing of slurs times inside the tuplet
- Fixed importing of canorus files containing tuplet+slur combination
- Fixed settings dialog page on startup, if playback device not available anymore
- Fixed crash in reposit method, check for valid slur during creation
- Implemented degree-based accidentals detection for the given diatonic midi key
- Fixed semitiones calculation of diminished intervals
- Fixed midi notes import real times and for tempo > 240bmp
- Fixed wrong calculation from midi pitch to diatonic pitch
- Added parameter for scrolling the score view on newly selected music elements
- Fixed wrong semitones interval calculation
- Added midi support for (GM) instruments
- Fixed midi time and length calculation for midi import
- Fixed brackets and quotes lilypond export
- Fixed importing the tempo mark on a slured element
- Added notes, events to midi import and allow control via scripting
- Added list of shortcuts (midi and UI) in a special file to be used for
  user defined shortcuts
- Started work on backend for editing shortcuts (loading/saving/parsing)
- Fixed exporting text on chords to lilypond
- Added preliminary documentation of canorus libraries
- Fixed problem that make it impossible to save the document (#16606)
- Added support for moving sheets using drag&drop and double click
- Fixed unsaved changes warning dialog when opening recent documents
- Fixed sheet properties toolbar when removing the last sheet.
- Fixed update of the sheet tab name when renaming the sheet
- Fixed properties dialog layout
- Fixed default note stem direction
- Fixed that no time signature/barlines are shown when there are none in the score
- Fixed licensing issues with examples (and remove example with undefined license)
- Renamed license file to COPYING
- Added volta bracket support through special text mark
- Added release build possibility (including compiler optimizations)
- Fixed problem on text display with cleanup and chord creation
- Enforce UTF-8 encoding for the canorus and lilypond formats
- Fixed midi time scaling and quantisation for all events
- Fixed crash when opening an empty XML file
- Fixed crash with using certain styles in GNOME environment
- Fixed midi import adjustment of notes being left over
- Added articulation, fingering, dynamic marks to lilypond export
- Fixed problem with tuplet export by returning the last note of a chort
  instead of the first
- Fixed freeze in the GUI during import
- Fixed Midi export and repeats
- Fixed repeat in multiple staffs
- Fixed arbitrary placed key signature changes
- Added Midi support of key signature changes
- Added more examples
- Created undo only for a whole chord at midi keyboard input
- Fixed tuplet and chords saving
- Expanded scripting engine for figured bass
- Added some user interface settings
- Allowed midi import with no document opened
- Fixed minor problems on lilypond export
- Added GUI, support, load/save for figured bass marks
- Updated documentation
- Added support for melisma and syllabic lyrics in MusicXML import
- Moved view to the right if right border is hit on insert of new elements
- Fixed crash when reinterpreting accidentals
- Added reinterpret accidentals in transpose view
- Added support for key signature in midi export/playback
- Fixed default mode for the toolbar when creating a new document.
- Improved midi device (names)
- Use base name of midi imported file as sheet name
- Added support for time signatures in midi import
- Added factoring of music elements to scripting library
- Fixed automatic bar placement to work with future time signatures
- Added default time signature (midi recorder)
- Improvement for midi export: music length and tempo
- Now using newer RtMidi-1.0.9 library.
- Preserved midi channels and fixed hangover notes (midi import)
- Added multiple voices and tempo to midi import
- Added progress bar for opening and importing documents
- Use PMidi on all platforms
- Added some self-made midi examples
- Added Midi Import based on PMidi
- Fixed handling of sheets for midi export
- Added shortcut for cycling through sheets
- "Print Preview" is used for the current sheet only (same as for printing)
- Fixed problems when adding lyrics
- Added debian (ubuntu) build support (amd64)
- Started adding support for all kind of actions in Canorus
- Improved layout of properties dialog
- Added project file for the smallish IDE geany
- Fixed tempo for playback when starting outside of the beginning
- Fixed breve syntax in lilypond export
- Fixed back-scroll for repeats
- Moved "Use animated scroll" to settings dialog
- Fixed, lock (optionally, default), store scroll (position) on playback 
- Fixed playback of multiple voices with different timelengths
- Fixed MusicXML import (midi, grace notes)
- Added ArgoUML sources of the score model
- Parse movement title of MusicXML scores
- Fixed MusicXML import crash on multiple staffs and clefs and on unset <attributes>
- Added Czesh translation
- Started adding the action editor (to be finished in 0.7.2)
- Added support for Tab/Shift-Tab keys in Insert mode for voices
- Fixed crash when manipilating a slured chord
- Fixed dots offset and tuplet settings when editing the first time
- Fixed transposition bug in UI
- Fixed a crash when closing the document
- Removed some special characters on example file names.
- Added support for fermata in lilypond export
- Fixed a pasting problem
- Fixed UTF-8 file names in archives
- Added examples to the installer

0.7
===
- Added support for printing and preview of score.
- Added integrated Midi recorder.
- Added resources storage inside the document.
- Added User's guide.
- Added transposition support.
- GUI improvements:
  - Anti-aliasing in score view.
  - Music fonts not installed anymore.
  - Show note name when inserting notes.
  - Integrated User's guide browser.
- Import/Export improvements:
  - Basic MusicXml import
  - Basic Midi import
  - LilyPond now exports partial measure, uptext, downtext and rehersal marks
  - New export filters to PDF and SVG based on LilyPond
- Plugin improvements:
  - setSelection() and selection added to scripting engine.
  - rebuildUi() and repaintUi() added to scripting engine.
  - Added separator action for menus.
- Model improvements:
  - Added color property to music element.
  - Added facilities for calculating intervals from/to music pitches and key
    signatures.
  - Redesigned key signature, diatonic key and diatonic pitch.
  - Redesigned playable length and absolute length.
- Shipped Python 2.5 on Microsoft Windows.
- Support for Qt4.4.
- Official support for Mac OS X.

0.6
===
- Version 0.6 was skipped for various reasons

0.5
===
- Implemented infrastructure for getting MIDI-IN events.
- Lots of internal API changes:
  - Generalized Import and Export classes. New fileformats can now be implemented simply
    by inheriting those classes.
  - Import and Export are now done in their own threads.
  - Rewritten Voice class for insertion, deletion and manipulation for music elements.
    The score should now always stay consistent when removing a shared element from a
    single voice.
  - Scripting engine now uses internal CA-class name names instead of class names only.
    This solves the naming clashing problem in various scripting languages that don't
    use namespaces (eg. PHP) and enum<->class names clashes.
- Added marks:
  - Arbitrary text
  - BookMark
  - Tempo (bpm)
  - Ritardando, Accellerando
  - Fermata (normal, short, long, very long)
  - Dynamic (f, mf, p, sfz, etc.)
  - Crescendo, Decrescendo
  - Pedal (sustain)
  - Instrument change (effects midi as well)
  - Rehersal marks (A, B, C, D etc. on barlines)
  - Repeat marks (coda, varcoda, segno, volta)
  - Fingering (finger numbers, strings thumb, organ's left/right heel/toe)
- Added articulation marks:
  - Accent, Marcato, Staccatissimo, Espressivo, Staccato, Tenuto, Portato
  - Up bow, Down bow, Flageolet, Open, Stopped
  - Turn, ReverseTurn, Trill, Prall, Mordent, PrallPrall, PrallMordent, UpPrall,
    DownPrall, UpMordent, DownMordent, PrallDown, PrallUp, LinePrall
- Implemented export to Midi.
- New file format CAN - compressed CanorusML format with resources. This is now the
  default file format for Canorus.
  ISSUE: Please use CanorusML file format when using the document on cross platforms.
- Using new RtMidi-1.0.7 library.
- New translations (Canorus speaks 12 languages):
  - Danish
  - Norwegian-NB
  - Traditional Chinese
  - German
  - Hungarian
  - French
- Lots of other cleanups and bugfixes.

0.4
===
- Settings dialog.
- Customizable colors for Score editor.
- Element advanced properties dialog with abilities to change order of elements.
- Document recovery, if Canorus crashes.
- Copy/Paste.
- Undo/Redo.
- Splash screen.
- MIDI instrument per voice support.
- Key signature major/minor support and function marking integration.
- All predefined clefs supported by LilyPond with custom offsets.
- Scripting engine is now always synchronized with the current API.
- Python engine uses objective Swig interface.
- New CanorusML support in scripting library for directly opening/saving Canorus files.
- New playback support in scripting library.
- Supported translations besides English: Slovenian, Dutch, Swedish, Hebrew, German.
- Keyboard bindings for note insertion, playback and selection.
- Qt4.3 compatibility.
- Lots of smaller additions and even more fixes.

0.3.1
=====
- SVG icons are now shown on Windows.
- Fixed hyphen and melisma bug.
- Fixed playback of chords.
- Fixed LilyPond import and export of key signatures.
- Fixed LilyPond import of notes with flats.
- Fixed LilyPond crash when importing rests before notes.
- Uninstaller on Windows now also removes Canorus directory and menu entry
- Fixed some CMake rules for correct QSvg and QXml module inclusion and
linkage.

0.3
===
- Added support for Ties, Slurs and Phrasing slurs.
- Added support for Lyrics.
- Multiple selection.
- Added support for Function markings manipulation.
- Rewritten Playback to support repeat barlines.
- LilyPond imoprt and export of Lyrics and other fixes.
- SVG icons used instead of PNG.
- Improved ScoreViewPort rendering.
- Fixed lots of crashes and other annoying bugs.

0.2.5
=====
- New Doxygen documentation.
- Initial work on MacOSX port.
- Improved function marking rendering
- Scripting engine now offers integration with Canorus menu, import/export
  dialogs and keyboard and mouse events.
- New completely XML CanorusML format.
- LilyPond document export support.
- LilyPond voice import/export support.
- Rewritten GUI. Now supports multiple main windows. Added lots of icons.
- Translations support. Current translations: English, Slovenian.
- Majority of the code rewritten so we have a more robust foundation now for
  future development.
- Lots of warnings, crashes, bugfixes and memory leaks fixed in MIDI, GUI and
  Scripting engine.

0.1.0
=====
- Third technical preview release
- Python scripting support
- Official windows support (MacOS-X was confirmed to compile too)
- MIDI setup dialog
- Canorus's settings are now stored (mainly for Midi Setup)
- Plugins subsystem
- Rest insertion
- Added FunctionMarking support
- Converted .otf fonts to .ttf
- Fixed some crashes
- Windows compilation support using MINGW compiler
- debian/rules added to create .deb packages for Debian-based
Linux
- nsis setup added to create Nullsoft Windows installer

0.0.5
=====
- Second technical preview release
- Scripting support (currently only ruby supported) via swig
- Support of musical element (like rests, notes with flags, time signature)
- New plugin architecture (still work in progress). A plugin can be
  requested via Canorus ML; it currently requires ruby-qt4 to be installed.

0.0.2
=====
- First officially released version
- Prototype with several working features

0.0.1
=====
- Skipped this version, should have been released as early prototype

