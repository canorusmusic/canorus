Compiling the Canorus prototype.
================================

- You need to have a compiler and linker installed

The prototype was only test-compiled with gcc-4.x but should also
compile file with gcc-3.x. If you encouter problems with one of
these compilers please report them to the Canorus Development ML
or on the Canorus project page (forum/support). 
For those on Win32 or MAC-OSX platform: You need to install the 
corresponding GNU tools first to compile Canorus (MinGW on Win32, 
don't know for MAC-OSX).

- Make sure you have Qt4 and Qt4-devel installed
  (the development files contain headers and qmake)
- You need to have at least cmake 2.4.2 installed
- Configure Canorus from a command shell with the following command: "cmake ."

If you get the following error (could be only the last line!):

QT_QMAKE_EXECUTABLE set to qmake version: QTVERSION = **Unknown**
QT_QMAKE_EXECUTABLE = /usr/bin/qmake, please set to path to qmake from qt4.
Qt qmake not found!

Then you have to do the following as described in the CMakeLists.txt
project file in the main directory as well:

Either remove the below line and set it to the path of
your qmake executable or modify the FindQt4.cmake program
and add "NO_DEFAULT_PATH" to the FIND_PROGRAM(QT_QMAKE_EXECUTABLE
instruction as last option, so the default path are not searched
for the qmake binary (like /usr/bin/qmake on Mandriva)
#set(QT_QMAKE_EXECUTABLE "/usr/lib/qt4/bin/qmake")

If you choose to modify FindQt4.cmake don't forget to either
set QTDIR to your qt installation path. CMake does not support
any other way currently.

IMPORTANT: Do not run cmake again before clearing the cache files
CMakeCache.txt and the directory CMakeFiles!

If you get the error "swig not found" then you have the problem
that FindSWIG.cmake does not match your system configuration. On
my system swig files are in /usr/share/swig/1.3.x, so I needed to
create a link to it from swig1.3:

ln -s /usr/share/swig/1.3.[version] /usr/share/swig1.3

Replace .[version] with the real version f.e. 1.3.27.

If you get the error "... Please set the following variable ...
RUBY_INCLUDE_PATH" then you need to point the FindRuby.cmake
file to the correct include path on your system. I needed to
modify the script directly:

- RUBY_POSSIBLE_INCLUDE_PATHS /usr/lib/ruby1.8/i586-linux(-gnu)
  (Attention, could be x86_64, i686, ... on some systems)
- FIND_LIBRARY - NAMES "ruby" (instead of "ruby1.8)
- FIND_PROGRAM - NAMES "ruby" (instead of "ruby1.8)

Best is to tell the package maker of ruby/cmake/swig about these
problems if they occur on your distribution. I won't adapt the Canorus
cmake files to cover all the possible pathes of every distribution.

I hope that the NO_DEFAULT_PATH options gets added to newer cmake releases.

- Compile Canorus with the following command: "make"

Installation
============

Install the fonts files in the directory fonts. I know of at least
two methods:

- Copy them to ~/.fonts (on *n*x based systems)
- Install them with an install tool like kcontrol or drakfont.
- Manual installation like described here: http://linux.org.mt/article/ttfonts

Running the Canorus Prototype
=============================

simply start "canorus(.exe)"

Settings
========
The settings are stored in the $HOME/.config/Canorus directory.
(Recent file list, current menu/perspective settings, options).

Windows users
=============
See nsis/Readme.txt for details about building Canorus under Microsoft Windows.
